worker_processes 1;

#user nobody nogroup;
# 'user nobody nobody;' for systems with 'nobody' as a group instead
error_log stderr info;
pid /var/run/nginx.pid;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
}

http {
  include mime.types;
  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log /dev/stdout combined;
  sendfile on;

  upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for a TCP configuration
    server 127.0.0.1:5001 fail_timeout=0;
  }

  root /qmk_api/html;

  #server {
  #  # if no Host match, close the connection to prevent host spoofing
  #  listen 80 default_server;
  #  return 444;
  #}

  server {
    # use 'listen 80 deferred;' for Linux
    # use 'listen 80 accept_filter=httpready;' for FreeBSD
    listen 8080;
    client_max_body_size 40M;

    # set the correct host(s) for your site
    server_name build-qmk.chonkerkeys.com;

    keepalive_timeout 5;

    location = / {
      try_files /___sure_notfound___/$uri @app_proxy;
    }

    location = /v1 {
      try_files /___sure_notfound___/$uri @app_proxy;
    }

    location ~ /v1/(healthcheck|compile|converters|keyboards|metrics|skeletons|telemetry|usb) {
      try_files /___sure_notfound___/$uri @app_proxy;
    }

    location @app_proxy {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://app_server;
    }

    error_page 400 401 402 403 404 405 406 /4xx.html;
    location = /4xx.html {
      internal;
    }
  }
}
